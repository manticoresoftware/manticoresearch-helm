name: k3s Testing
on:
  pull_request:
    branches: [ master ]

jobs:
  build-balancer:
    concurrency:
      group: "build-balancer-${{ github.event.number }}"
      cancel-in-progress: true
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Get changed files
        id: changed-files
        uses: actions/github-script@v6
        with:
          script: |
            const response = await github.rest.pulls.listFiles({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
            });
            const files = response.data.map(file => file.filename);
            const testOnly = files.length > 0 && files.every(file => file.startsWith('clt_tests/'));
            core.setOutput('test-only', testOnly);

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push balancer
        uses: docker/build-push-action@v4
        if: steps.changed-files.outputs.test-only != 'true'
        with:
          context: ./sources/manticore-balancer
          platforms: linux/amd64,linux/arm64
          push: true
          tags: manticoresearch/helm-balancer:0.0.0-unstable
          cache-from: type=registry,ref=manticoresearch/helm-balancer:cache
          cache-to: type=inline

  build-worker:
    concurrency:
      group: "build-worker-${{ github.event.number }}"
      cancel-in-progress: true
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Get changed files
        id: changed-files
        uses: actions/github-script@v6
        with:
          script: |
            const response = await github.rest.pulls.listFiles({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
            });
            const files = response.data.map(file => file.filename);
            const testOnly = files.length > 0 && files.every(file => file.startsWith('clt_tests/'));
            core.setOutput('test-only', testOnly);

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push worker
        uses: docker/build-push-action@v4
        if: steps.changed-files.outputs.test-only != 'true'
        with:
          context: ./sources/manticore-worker
          platforms: linux/amd64,linux/arm64
          push: true
          tags: manticoresearch/helm-worker:0.0.0-unstable
          cache-from: type=registry,ref=manticoresearch/helm-worker:cache
          cache-to: type=inline

  tests:
    needs: [build-balancer, build-worker]
    concurrency:
      group: "tests-${{ github.event.number }}"
      cancel-in-progress: true
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: debianmaster/actions-k3s@v1.0.5
        id: k3s
        with:
          version: 'latest'

      - name: Wait for k3s to be ready
        run: |
          echo "Waiting for k3s to be ready"
          until kubectl get nodes --kubeconfig ${{ steps.k3s.outputs.kubeconfig }} | grep -q " Ready "; do
            echo "Waiting..."
            sleep 2
          done
          echo "k3s is ready"

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - uses: manticoresoftware/clt@0.6.3
        with:
          image: manticoresearch/helm-test-kit:0.0.1
          test_prefix: clt_tests/tests/
          run_args: -e TELEMETRY=0 --net=host -v ${{ steps.k3s.outputs.kubeconfig }}:${{ steps.k3s.outputs.kubeconfig }} -v $(pwd)/charts/:/.clt/charts/